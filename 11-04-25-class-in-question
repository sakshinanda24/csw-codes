package lab_csw;
class Node{
	int data;
	Node left,right;
	Node(int data){
		this.data=data;
	}
}
     public class BSTree {
	
		
			public static Node root=null;
		
		public static void insert(int data) {
			Node temp=new Node(data);
			if(root==null) {
				root=temp;
				return;
			}
				Node current=root;
				Node parent=null;
				while(current!=null) {
					parent=current;
				
				if(data<current.data) {
				 current=current.left;
				}else {
					current=current.right;
				}
				}
					
			if(data<parent.data) {
				parent.left=temp;
			}else {
				parent.right=temp;
				
			}		
			}
			public static void inorder(Node node) {
				if(node==null)return;
				inorder(node.left);
				System.out.println(node.data+" ");
				inorder(node.right);
			}
			public static void preorder(Node node) {
				if(node==null)return;
				System.out.println(node.data+" ");
				preorder(node.left);
				preorder(node.right);	
			}
	 public static void postorder(Node node) {
		 if(node==null)return;
		 postorder(node.left);
		 postorder(node.right);	
		 System.out.println(node.data+" ");
	 }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		BSTree  obj= new BSTree();
		insert(15);
		insert(10);
		insert(20);
		insert(5);
		insert(12);
		System.out.println("Root: " +root.data);
		obj.root =new Node(1);
		obj.root.left= new Node(2);
		obj.root.right= new Node(3);
		obj.root.left.left= new Node(4);
		obj.root.left.right= new Node(5);
		System.out.println("In-Order traversal : ");
		inorder(obj.root);
		System.out.println();
		System.out.println("Pre-Order traversal : ");
		preorder(obj.root);
		System.out.println();
		System.out.println("Post-Order traversal : ");
		postorder(obj.root);
		System.out.println();
		
		

	}


	
		
	}


	

output:

Root: 15
In-Order traversal : 
4 
2 
5 
1 
3 

Pre-Order traversal : 
1 
2 
4 
5 
3 

Post-Order traversal : 
4 
5 
2 
3 
1 

