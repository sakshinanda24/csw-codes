package lab_csw;
class BSTNode{
	int info;
	BSTNode left, right;
	public BSTNode(int info) {
		this.info=info;
		this.left=null;
		this.right=null;
	}
}
class BinarySearchTree{
	BSTNode root;
	public BinarySearchTree(){
		root=null;
	}
	public void insert(int key) {
		root= insertRec(root,key);
	}
	private BSTNode insertRec(BSTNode root,int key) {
		if(root==null) {
			return new BSTNode(key);
		}
		if(key<root.info) {
			root.left= insertRec(root.left, key);
		}else if(key>root.info) {
			root.right= insertRec(root.right, key);
		}
		return root;	
		}
	public void preOrder() {
		System.out.print("Pre-Order: ");
		preOrderRec(root);
		System.out.println();
	}
	private void preOrderRec(BSTNode node) {
		if(node!=null) {
			System.out.print(node.info+ " ");
			preOrderRec(node.left);
			preOrderRec(node.right);
		}
	}
	public void inOrder() {
		System.out.print("In-Order: ");
		inOrderRec(root);
		System.out.println();
	}
	private void inOrderRec(BSTNode node) {
		if(node!=null) {
			inOrderRec(node.left);
			System.out.print(node.info+ " ");
			inOrderRec(node.right);
		}
	}
		public void postOrder() {
			System.out.print("Post-Order: ");
			postOrderRec(root);
			System.out.println();
		}

   private void postOrderRec(BSTNode node) {
	if(node!=null) {
		postOrderRec(node.left);
		postOrderRec(node.right);
		System.out.print(node.info+ " ");
		
	}
		
	}
}


public class A6Q1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
BinarySearchTree bst= new BinarySearchTree();
int[] values= {50,30,70,20,40,60,80};
for(int val: values) {
	bst.insert(val);
}
 bst.preOrder();
 bst.inOrder();
 bst.postOrder();
	}

}







output:
Pre-Order: 50 30 20 40 70 60 80 
In-Order: 20 30 40 50 60 70 80 
Post-Order: 20 40 30 60 80 70 50 
